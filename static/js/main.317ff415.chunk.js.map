{"version":3,"sources":["components/card/Card.jsx","components/card-list/CardList.jsx","components/search-box/SearchBox.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","alt","src","id","name","email","CardList","props","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","catch","error","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","root","document","getElementById","ReactDOM","render"],"mappings":"oTAEe,SAASA,EAAT,GAA4B,IAAZC,EAAW,EAAXA,QAC7B,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAI,UACJC,IAAG,+BAA0BH,EAAQI,GAAlC,4BAEL,6BAAKJ,EAAQK,OACb,4BAAIL,EAAQM,W,MCPH,SAASC,EAASC,GAC/B,OACE,qBAAKP,UAAU,YAAf,SACGO,EAAMC,SAASC,KAAI,SAACV,GAAD,OAClB,cAACD,EAAD,CAAuBC,QAASA,GAArBA,EAAQI,S,YCLZ,SAASO,EAAT,GAAmD,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,aAC/C,OACE,uBACEZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,I,ICuCDG,E,kDAzCb,aAAe,IAAD,8BACZ,gBAiBFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAhBtC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IALH,E,qDASd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAET,SAAUkB,OAC1CC,OAAM,SAACC,GACN,MAAMA,O,oBAQZ,WAAU,IAAD,EAC2BC,KAAKR,MAA/Bb,EADD,EACCA,SAAUU,EADX,EACWA,YACZY,EAAmBtB,EAASuB,QAAO,SAAChC,GAAD,OACvCA,EAAQK,KAAK4B,cAAcC,SAASf,EAAYc,kBAGlD,OACE,sBAAKhC,UAAU,MAAf,UACE,kDACA,cAACU,EAAD,CACEC,YAAY,qBACZC,aAAciB,KAAKjB,eAErB,cAACN,EAAD,CAAUE,SAAUsB,W,GApCVI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDRO,EAAOC,SAASC,eAAe,QAErCC,IAASC,OAAO,cAAC,EAAD,IAASJ,GAKzBR,M","file":"static/js/main.317ff415.chunk.js","sourcesContent":["import './card.css';\n\nexport default function Card({ monster }) {\n  return (\n    <div className=\"card-container\">\n      <img\n        alt=\"monster\"\n        src={`https://robohash.org/${monster.id}?set=set2&size=180x180`}\n      />\n      <h2>{monster.name}</h2>\n      <p>{monster.email}</p>\n    </div>\n  );\n}\n","import Card from '../card/Card';\nimport './cardlist.css';\n\nexport default function CardList(props) {\n  return (\n    <div className=\"card-list\">\n      {props.monsters.map((monster) => (\n        <Card key={monster.id} monster={monster} />\n      ))}\n    </div>\n  );\n}\n","import './searchbox.css';\n\nexport default function SearchBox({ placeholder, handleChange }) {\n  return (\n    <input\n      className=\"search\"\n      type=\"search\"\n      placeholder={placeholder}\n      onChange={handleChange}\n    />\n  );\n}\n","import { Component } from 'react';\nimport CardList from './components/card-list/CardList';\nimport './App.css';\nimport SearchBox from './components/search-box/SearchBox';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: '',\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }))\n      .catch((error) => {\n        throw error;\n      });\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeholder=\"Search monsters...\"\n          handleChange={this.handleChange}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = document.getElementById('root');\n\nReactDOM.render(<App />, root);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}